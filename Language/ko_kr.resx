<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="assetsCopy" xml:space="preserve">
    <value>StreamingAssets/assets 복사...</value>
  </data>
  <data name="backup" xml:space="preserve">
    <value>백업...</value>
  </data>
  <data name="chooseAProject" xml:space="preserve">
    <value>프로젝트 선택</value>
  </data>
  <data name="damagedProject" xml:space="preserve">
    <value>손상된 프로젝트</value>
  </data>
  <data name="decompressing" xml:space="preserve">
    <value>압축 푸는 중</value>
  </data>
  <data name="detectedVersion" xml:space="preserve">
    <value>감지된 버전 - </value>
  </data>
  <data name="download" xml:space="preserve">
    <value>다운로드</value>
  </data>
  <data name="downloadComplete" xml:space="preserve">
    <value>다운로드 완료!</value>
  </data>
  <data name="downloadDamagedProject" xml:space="preserve">
    <value>다운로드한 프로젝트가 손상되었습니다</value>
  </data>
  <data name="downloadedNoProject" xml:space="preserve">
    <value>다운로드한 프로젝트가 없습니다</value>
  </data>
  <data name="downloadedProjectNoVersionFile" xml:space="preserve">
    <value>다운로드한 프로젝트에 버전 파일이 없습니다</value>
  </data>
  <data name="downloadedVersion" xml:space="preserve">
    <value>다운로드한 버전 - </value>
  </data>
  <data name="easterEgg" xml:space="preserve">
    <value>학교생활!
애니 재밌어요</value>
  </data>
  <data name="install" xml:space="preserve">
    <value>설치</value>
  </data>
  <data name="installationFinished" xml:space="preserve">
    <value>설치 완료!</value>
  </data>
  <data name="installWarning" xml:space="preserve">
    <value>계속하면 SC KRM 폴더의 모든 항목이 삭제됩니다!
계속하시겠습니까?
(StreamingAssets 폴더는 sc-krm 네임스페이스 안에 있는 파일만 삭제하며, 나머지 파일은 설치할 파일만 덮어씁니다.)</value>
  </data>
  <data name="newestVersion" xml:space="preserve">
    <value>최신 버전 - </value>
  </data>
  <data name="none" xml:space="preserve">
    <value>없음</value>
  </data>
  <data name="noProject" xml:space="preserve">
    <value>프로젝트 없음</value>
  </data>
  <data name="noProjectSelected" xml:space="preserve">
    <value>선택된 프로젝트 없음</value>
  </data>
  <data name="noVersionFile" xml:space="preserve">
    <value>버전 파일 없음</value>
  </data>
  <data name="overwrite" xml:space="preserve">
    <value>덮어쓰기</value>
  </data>
  <data name="overwriteProjectSettings" xml:space="preserve">
    <value>프로젝트 설정을 기본값으로 덮어쓰시겠습니까?
(설치할 설정만 영향을 받고 사용자가 추가한 설정은 영향을 받지 않습니다)</value>
  </data>
  <data name="packCopy" xml:space="preserve">
    <value>StreamingAssets/pack.* 복사...</value>
  </data>
  <data name="projectSettingsJsonMerge" xml:space="preserve">
    <value>다운로드한 프로젝트와 선택한 프로젝트의 설정을 병합...</value>
  </data>
  <data name="refresh" xml:space="preserve">
    <value>새로고침</value>
  </data>
  <data name="sckrmCopy" xml:space="preserve">
    <value>SC KRM 복사...</value>
  </data>
  <data name="sckrmDelete" xml:space="preserve">
    <value>SC KRM 삭제...</value>
  </data>
  <data name="sckrmVersionCopy" xml:space="preserve">
    <value>SC-KRM-Version 파일 복사...</value>
  </data>
  <data name="selectedProject" xml:space="preserve">
    <value>선택한 프로젝트 - </value>
  </data>
  <data name="selectedProjectSettingDeserialize" xml:space="preserve">
    <value>선택한 프로젝트 설정 직렬화 해제...</value>
  </data>
  <data name="warning" xml:space="preserve">
    <value>경고</value>
  </data>
</root>